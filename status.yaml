# Status configuration

# Controller status indicator
output:
  - platform: esp8266_pwm
    id: ${node_name}_controller_status
    pin: GPIO14

# System status indicator
light:
  - platform: status_led
    name: $node_prefix systemstatus
    id: ${node_name}_system_status_indicator
    pin:
      number: GPIO02
      inverted: false
# Controller status indicator
  - platform: monochromatic
    name: $node_prefix reglerstatus
    id: ${node_name}_controller_status_indicator
    output: ${node_name}_controller_status
    effects:
      - pulse:
          name: auto_mode
          transition_length: 0.2s
          update_interval: 0.6s
      - pulse:
          name: summer_mode
          transition_length: 0.2s
          update_interval: 2s
      - pulse:
          name: manual_mode
          transition_length: 0.2s
          update_interval: 4s

# Controller operational state indication
binary_sensor:
  - platform: homeassistant
    id: zone_actuator_status
    entity_id: binary_sensor.${zone_id}_aktiv
    publish_initial_state: true
    filters:
      - lambda: if ( !isnan(id(zone_actuator_status).state) ) return x; else return false;
    on_press:
      - light.turn_on:
          id: ${node_name}_controller_status_indicator
          effect: none
    on_release:
      - light.turn_off:
          id: ${node_name}_controller_status_indicator

# Status indicator rightness
number:
  - platform: template
    name: $node_prefix ljusstyrka
    id: ${node_name}_status_indicator_brightness
    icon: mdi:lightbulb-on-outline
    optimistic: true
    mode: slider
    unit_of_measurement: '%'
    min_value: 20
    max_value: 100
    step: 1
    initial_value: 100
    restore_value: true
    on_value:
      then:
        - light.control:
            id: ${node_name}_controller_status_indicator
            brightness: !lambda |-
              return id(${node_name}_status_indicator_brightness).state / 100.0;
